Terminals unused in grammar

    KW_THEN
    DL_DOT


Grammar

    0 $accept: program $end

    1 program: %empty

    2 $@1: %empty

    3 program: KW_MAIN ID DL_SMCOLON declarations subprogram_declarations $@1 compound_statement

    4 declarations: declarations type identifier_list DL_SMCOLON
    5             | %empty

    6 subprogram_declarations: subprogram_declaration subprogram_declarations
    7                        | %empty

    8 compound_statement: KW_BEGIN statement_list KW_END

    9 type: standard_type
   10     | standard_type DL_LBRACK INTEGER DL_RBRACK

   11 identifier_list: ID
   12                | ID DL_COMMA identifier_list

   13 standard_type: KW_INT
   14              | KW_FLOAT

   15 $@2: %empty

   16 subprogram_declaration: subprogram_head $@2 declarations compound_statement

   17 subprogram_head: KW_FUNC ID arguments DL_COLON standard_type DL_SMCOLON
   18                | KW_PROC ID arguments DL_SMCOLON

   19 arguments: DL_LPAREN parameter_list DL_RPAREN
   20          | %empty

   21 parameter_list: identifier_list DL_COLON type
   22               | identifier_list DL_COLON type DL_SMCOLON parameter_list

   23 statement_list: statement
   24               | statement DL_SMCOLON statement_list

   25 statement: variable DL_ASSIGN expression
   26          | print_statement
   27          | procedure_statement
   28          | compound_statement
   29          | if_statement
   30          | while_statement
   31          | for_statement
   32          | KW_RETURN expression
   33          | KW_NOP

   34 variable: ID
   35         | ID DL_LBRACK expression DL_RBRACK

   36 print_statement: KW_PRINT
   37                | KW_PRINT DL_LPAREN expression DL_RPAREN

   38 procedure_statement: ID DL_LPAREN actual_parameter_expression DL_RPAREN

   39 if_statement: KW_IF expression DL_COLON statement elif_statement
   40             | KW_IF expression DL_COLON statement elif_statement KW_ELSE DL_COLON statement

   41 elif_statement: %empty
   42               | elif_statement KW_ELIF expression DL_COLON statement

   43 while_statement: KW_WHILE expression DL_COLON statement
   44                | KW_WHILE expression DL_COLON statement KW_ELSE DL_COLON statement

   45 for_statement: KW_FOR for_expression KW_IN for_expression DL_COLON statement KW_ELSE DL_COLON statement
   46              | KW_FOR for_expression KW_IN for_expression DL_COLON statement

   47 for_expression: simple_expression

   48 actual_parameter_expression: %empty
   49                            | expression_list

   50 expression_list: expression
   51                | expression DL_COMMA expression_list

   52 expression: simple_expression
   53           | simple_expression relop simple_expression

   54 simple_expression: term
   55                  | term addop simple_expression

   56 term: factor
   57     | factor multop term

   58 factor: INTEGER
   59       | FLOAT
   60       | variable
   61       | procedure_statement
   62       | OP_NEG factor
   63       | sign factor

   64 sign: OP_ADD
   65     | OP_SUB

   66 relop: OP_GT
   67      | OP_GE
   68      | OP_LT
   69      | OP_LE
   70      | OP_EQUAL
   71      | OP_NOTEQ
   72      | KW_IN

   73 addop: OP_ADD
   74      | OP_SUB

   75 multop: OP_MUL
   76       | OP_DIV


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    ID <sval> (258) 3 11 12 17 18 34 35 38
    KW_MAIN <sval> (259) 3
    KW_FUNC <sval> (260) 17
    KW_PROC <sval> (261) 18
    KW_BEGIN <sval> (262) 8
    KW_END <sval> (263) 8
    KW_IF <sval> (264) 39 40
    KW_THEN <sval> (265)
    KW_ELSE <sval> (266) 40 44 45
    KW_ELIF <sval> (267) 42
    KW_NOP <sval> (268) 33
    KW_FOR <sval> (269) 45 46
    KW_WHILE <sval> (270) 43 44
    KW_RETURN <sval> (271) 32
    KW_PRINT <sval> (272) 36 37
    KW_IN <sval> (273) 45 46 72
    OP_ADD <sval> (274) 64 73
    OP_SUB <sval> (275) 65 74
    OP_MUL <sval> (276) 75
    OP_DIV <sval> (277) 76
    OP_LT <sval> (278) 68
    OP_LE <sval> (279) 69
    OP_GT <sval> (280) 66
    OP_GE <sval> (281) 67
    OP_EQUAL <sval> (282) 70
    OP_NOTEQ <sval> (283) 71
    OP_NEG <sval> (284) 62
    DL_SMCOLON <sval> (285) 3 4 17 18 22 24
    DL_DOT <sval> (286)
    DL_COMMA <sval> (287) 12 51
    DL_ASSIGN <sval> (288) 25
    DL_LPAREN <sval> (289) 19 37 38
    DL_RPAREN <sval> (290) 19 37 38
    DL_LBRACK <sval> (291) 10 35
    DL_RBRACK <sval> (292) 10 35
    DL_COLON <sval> (293) 17 21 22 39 40 42 43 44 45 46
    INTEGER <ival> (294) 10 58
    KW_INT <ival> (295) 13
    KW_FLOAT <ival> (296) 14
    FLOAT <fval> (297) 59


Nonterminals, with rules where they appear

    $accept (43)
        on left: 0
    program (44)
        on left: 1 3
        on right: 0
    $@1 (45)
        on left: 2
        on right: 3
    declarations <sym_node_ptr> (46)
        on left: 4 5
        on right: 3 4 16
    subprogram_declarations (47)
        on left: 6 7
        on right: 3 6
    compound_statement <sym_node_ptr> (48)
        on left: 8
        on right: 3 16 28
    type <ival> (49)
        on left: 9 10
        on right: 4 21 22
    identifier_list <val_node_ptr> (50)
        on left: 11 12
        on right: 4 12 21 22
    standard_type <ival> (51)
        on left: 13 14
        on right: 9 10 17
    subprogram_declaration <sym_ptr> (52)
        on left: 16
        on right: 6
    $@2 (53)
        on left: 15
        on right: 16
    subprogram_head <sym_node_ptr> (54)
        on left: 17 18
        on right: 16
    arguments <sym_node_ptr> (55)
        on left: 19 20
        on right: 17 18
    parameter_list <sym_node_ptr> (56)
        on left: 21 22
        on right: 19 22
    statement_list <sym_node_ptr> (57)
        on left: 23 24
        on right: 8 24
    statement <sym_node_ptr> (58)
        on left: 25 26 27 28 29 30 31 32 33
        on right: 23 24 39 40 42 43 44 45 46
    variable <sym_ptr> (59)
        on left: 34 35
        on right: 25 60
    print_statement <sym_node_ptr> (60)
        on left: 36 37
        on right: 26
    procedure_statement <sym_node_ptr> (61)
        on left: 38
        on right: 27 61
    if_statement <sym_node_ptr> (62)
        on left: 39 40
        on right: 29
    elif_statement (63)
        on left: 41 42
        on right: 39 40 42
    while_statement <sym_node_ptr> (64)
        on left: 43 44
        on right: 30
    for_statement <sym_node_ptr> (65)
        on left: 45 46
        on right: 31
    for_expression (66)
        on left: 47
        on right: 45 46
    actual_parameter_expression (67)
        on left: 48 49
        on right: 38
    expression_list (68)
        on left: 50 51
        on right: 49 51
    expression <sym_ptr> (69)
        on left: 52 53
        on right: 25 32 35 37 39 40 42 43 44 50 51
    simple_expression <sym_ptr> (70)
        on left: 54 55
        on right: 47 52 53 55
    term <sym_ptr> (71)
        on left: 56 57
        on right: 54 55 57
    factor <sym_ptr> (72)
        on left: 58 59 60 61 62 63
        on right: 56 57 62 63
    sign <sval> (73)
        on left: 64 65
        on right: 63
    relop (74)
        on left: 66 67 68 69 70 71 72
        on right: 53
    addop <sval> (75)
        on left: 73 74
        on right: 55
    multop <sval> (76)
        on left: 75 76
        on right: 57


State 0

    0 $accept: . program $end

    KW_MAIN  shift, and go to state 1

    $default  reduce using rule 1 (program)

    program  go to state 2


State 1

    3 program: KW_MAIN . ID DL_SMCOLON declarations subprogram_declarations $@1 compound_statement

    ID  shift, and go to state 3


State 2

    0 $accept: program . $end

    $end  shift, and go to state 4


State 3

    3 program: KW_MAIN ID . DL_SMCOLON declarations subprogram_declarations $@1 compound_statement

    DL_SMCOLON  shift, and go to state 5


State 4

    0 $accept: program $end .

    $default  accept


State 5

    3 program: KW_MAIN ID DL_SMCOLON . declarations subprogram_declarations $@1 compound_statement

    $default  reduce using rule 5 (declarations)

    declarations  go to state 6


State 6

    3 program: KW_MAIN ID DL_SMCOLON declarations . subprogram_declarations $@1 compound_statement
    4 declarations: declarations . type identifier_list DL_SMCOLON

    KW_FUNC   shift, and go to state 7
    KW_PROC   shift, and go to state 8
    KW_INT    shift, and go to state 9
    KW_FLOAT  shift, and go to state 10

    $default  reduce using rule 7 (subprogram_declarations)

    subprogram_declarations  go to state 11
    type                     go to state 12
    standard_type            go to state 13
    subprogram_declaration   go to state 14
    subprogram_head          go to state 15


State 7

   17 subprogram_head: KW_FUNC . ID arguments DL_COLON standard_type DL_SMCOLON

    ID  shift, and go to state 16


State 8

   18 subprogram_head: KW_PROC . ID arguments DL_SMCOLON

    ID  shift, and go to state 17


State 9

   13 standard_type: KW_INT .

    $default  reduce using rule 13 (standard_type)


State 10

   14 standard_type: KW_FLOAT .

    $default  reduce using rule 14 (standard_type)


State 11

    3 program: KW_MAIN ID DL_SMCOLON declarations subprogram_declarations . $@1 compound_statement

    $default  reduce using rule 2 ($@1)

    $@1  go to state 18


State 12

    4 declarations: declarations type . identifier_list DL_SMCOLON

    ID  shift, and go to state 19

    identifier_list  go to state 20


State 13

    9 type: standard_type .
   10     | standard_type . DL_LBRACK INTEGER DL_RBRACK

    DL_LBRACK  shift, and go to state 21

    $default  reduce using rule 9 (type)


State 14

    6 subprogram_declarations: subprogram_declaration . subprogram_declarations

    KW_FUNC  shift, and go to state 7
    KW_PROC  shift, and go to state 8

    $default  reduce using rule 7 (subprogram_declarations)

    subprogram_declarations  go to state 22
    subprogram_declaration   go to state 14
    subprogram_head          go to state 15


State 15

   16 subprogram_declaration: subprogram_head . $@2 declarations compound_statement

    $default  reduce using rule 15 ($@2)

    $@2  go to state 23


State 16

   17 subprogram_head: KW_FUNC ID . arguments DL_COLON standard_type DL_SMCOLON

    DL_LPAREN  shift, and go to state 24

    $default  reduce using rule 20 (arguments)

    arguments  go to state 25


State 17

   18 subprogram_head: KW_PROC ID . arguments DL_SMCOLON

    DL_LPAREN  shift, and go to state 24

    $default  reduce using rule 20 (arguments)

    arguments  go to state 26


State 18

    3 program: KW_MAIN ID DL_SMCOLON declarations subprogram_declarations $@1 . compound_statement

    KW_BEGIN  shift, and go to state 27

    compound_statement  go to state 28


State 19

   11 identifier_list: ID .
   12                | ID . DL_COMMA identifier_list

    DL_COMMA  shift, and go to state 29

    $default  reduce using rule 11 (identifier_list)


State 20

    4 declarations: declarations type identifier_list . DL_SMCOLON

    DL_SMCOLON  shift, and go to state 30


State 21

   10 type: standard_type DL_LBRACK . INTEGER DL_RBRACK

    INTEGER  shift, and go to state 31


State 22

    6 subprogram_declarations: subprogram_declaration subprogram_declarations .

    $default  reduce using rule 6 (subprogram_declarations)


State 23

   16 subprogram_declaration: subprogram_head $@2 . declarations compound_statement

    $default  reduce using rule 5 (declarations)

    declarations  go to state 32


State 24

   19 arguments: DL_LPAREN . parameter_list DL_RPAREN

    ID  shift, and go to state 19

    identifier_list  go to state 33
    parameter_list   go to state 34


State 25

   17 subprogram_head: KW_FUNC ID arguments . DL_COLON standard_type DL_SMCOLON

    DL_COLON  shift, and go to state 35


State 26

   18 subprogram_head: KW_PROC ID arguments . DL_SMCOLON

    DL_SMCOLON  shift, and go to state 36


State 27

    8 compound_statement: KW_BEGIN . statement_list KW_END

    ID         shift, and go to state 37
    KW_BEGIN   shift, and go to state 27
    KW_IF      shift, and go to state 38
    KW_NOP     shift, and go to state 39
    KW_FOR     shift, and go to state 40
    KW_WHILE   shift, and go to state 41
    KW_RETURN  shift, and go to state 42
    KW_PRINT   shift, and go to state 43

    compound_statement   go to state 44
    statement_list       go to state 45
    statement            go to state 46
    variable             go to state 47
    print_statement      go to state 48
    procedure_statement  go to state 49
    if_statement         go to state 50
    while_statement      go to state 51
    for_statement        go to state 52


State 28

    3 program: KW_MAIN ID DL_SMCOLON declarations subprogram_declarations $@1 compound_statement .

    $default  reduce using rule 3 (program)


State 29

   12 identifier_list: ID DL_COMMA . identifier_list

    ID  shift, and go to state 19

    identifier_list  go to state 53


State 30

    4 declarations: declarations type identifier_list DL_SMCOLON .

    $default  reduce using rule 4 (declarations)


State 31

   10 type: standard_type DL_LBRACK INTEGER . DL_RBRACK

    DL_RBRACK  shift, and go to state 54


State 32

    4 declarations: declarations . type identifier_list DL_SMCOLON
   16 subprogram_declaration: subprogram_head $@2 declarations . compound_statement

    KW_BEGIN  shift, and go to state 27
    KW_INT    shift, and go to state 9
    KW_FLOAT  shift, and go to state 10

    compound_statement  go to state 55
    type                go to state 12
    standard_type       go to state 13


State 33

   21 parameter_list: identifier_list . DL_COLON type
   22               | identifier_list . DL_COLON type DL_SMCOLON parameter_list

    DL_COLON  shift, and go to state 56


State 34

   19 arguments: DL_LPAREN parameter_list . DL_RPAREN

    DL_RPAREN  shift, and go to state 57


State 35

   17 subprogram_head: KW_FUNC ID arguments DL_COLON . standard_type DL_SMCOLON

    KW_INT    shift, and go to state 9
    KW_FLOAT  shift, and go to state 10

    standard_type  go to state 58


State 36

   18 subprogram_head: KW_PROC ID arguments DL_SMCOLON .

    $default  reduce using rule 18 (subprogram_head)


State 37

   34 variable: ID .
   35         | ID . DL_LBRACK expression DL_RBRACK
   38 procedure_statement: ID . DL_LPAREN actual_parameter_expression DL_RPAREN

    DL_LPAREN  shift, and go to state 59
    DL_LBRACK  shift, and go to state 60

    $default  reduce using rule 34 (variable)


State 38

   39 if_statement: KW_IF . expression DL_COLON statement elif_statement
   40             | KW_IF . expression DL_COLON statement elif_statement KW_ELSE DL_COLON statement

    ID       shift, and go to state 37
    OP_ADD   shift, and go to state 61
    OP_SUB   shift, and go to state 62
    OP_NEG   shift, and go to state 63
    INTEGER  shift, and go to state 64
    FLOAT    shift, and go to state 65

    variable             go to state 66
    procedure_statement  go to state 67
    expression           go to state 68
    simple_expression    go to state 69
    term                 go to state 70
    factor               go to state 71
    sign                 go to state 72


State 39

   33 statement: KW_NOP .

    $default  reduce using rule 33 (statement)


State 40

   45 for_statement: KW_FOR . for_expression KW_IN for_expression DL_COLON statement KW_ELSE DL_COLON statement
   46              | KW_FOR . for_expression KW_IN for_expression DL_COLON statement

    ID       shift, and go to state 37
    OP_ADD   shift, and go to state 61
    OP_SUB   shift, and go to state 62
    OP_NEG   shift, and go to state 63
    INTEGER  shift, and go to state 64
    FLOAT    shift, and go to state 65

    variable             go to state 66
    procedure_statement  go to state 67
    for_expression       go to state 73
    simple_expression    go to state 74
    term                 go to state 70
    factor               go to state 71
    sign                 go to state 72


State 41

   43 while_statement: KW_WHILE . expression DL_COLON statement
   44                | KW_WHILE . expression DL_COLON statement KW_ELSE DL_COLON statement

    ID       shift, and go to state 37
    OP_ADD   shift, and go to state 61
    OP_SUB   shift, and go to state 62
    OP_NEG   shift, and go to state 63
    INTEGER  shift, and go to state 64
    FLOAT    shift, and go to state 65

    variable             go to state 66
    procedure_statement  go to state 67
    expression           go to state 75
    simple_expression    go to state 69
    term                 go to state 70
    factor               go to state 71
    sign                 go to state 72


State 42

   32 statement: KW_RETURN . expression

    ID       shift, and go to state 37
    OP_ADD   shift, and go to state 61
    OP_SUB   shift, and go to state 62
    OP_NEG   shift, and go to state 63
    INTEGER  shift, and go to state 64
    FLOAT    shift, and go to state 65

    variable             go to state 66
    procedure_statement  go to state 67
    expression           go to state 76
    simple_expression    go to state 69
    term                 go to state 70
    factor               go to state 71
    sign                 go to state 72


State 43

   36 print_statement: KW_PRINT .
   37                | KW_PRINT . DL_LPAREN expression DL_RPAREN

    DL_LPAREN  shift, and go to state 77

    $default  reduce using rule 36 (print_statement)


State 44

   28 statement: compound_statement .

    $default  reduce using rule 28 (statement)


State 45

    8 compound_statement: KW_BEGIN statement_list . KW_END

    KW_END  shift, and go to state 78


State 46

   23 statement_list: statement .
   24               | statement . DL_SMCOLON statement_list

    DL_SMCOLON  shift, and go to state 79

    $default  reduce using rule 23 (statement_list)


State 47

   25 statement: variable . DL_ASSIGN expression

    DL_ASSIGN  shift, and go to state 80


State 48

   26 statement: print_statement .

    $default  reduce using rule 26 (statement)


State 49

   27 statement: procedure_statement .

    $default  reduce using rule 27 (statement)


State 50

   29 statement: if_statement .

    $default  reduce using rule 29 (statement)


State 51

   30 statement: while_statement .

    $default  reduce using rule 30 (statement)


State 52

   31 statement: for_statement .

    $default  reduce using rule 31 (statement)


State 53

   12 identifier_list: ID DL_COMMA identifier_list .

    $default  reduce using rule 12 (identifier_list)


State 54

   10 type: standard_type DL_LBRACK INTEGER DL_RBRACK .

    $default  reduce using rule 10 (type)


State 55

   16 subprogram_declaration: subprogram_head $@2 declarations compound_statement .

    $default  reduce using rule 16 (subprogram_declaration)


State 56

   21 parameter_list: identifier_list DL_COLON . type
   22               | identifier_list DL_COLON . type DL_SMCOLON parameter_list

    KW_INT    shift, and go to state 9
    KW_FLOAT  shift, and go to state 10

    type           go to state 81
    standard_type  go to state 13


State 57

   19 arguments: DL_LPAREN parameter_list DL_RPAREN .

    $default  reduce using rule 19 (arguments)


State 58

   17 subprogram_head: KW_FUNC ID arguments DL_COLON standard_type . DL_SMCOLON

    DL_SMCOLON  shift, and go to state 82


State 59

   38 procedure_statement: ID DL_LPAREN . actual_parameter_expression DL_RPAREN

    ID       shift, and go to state 37
    OP_ADD   shift, and go to state 61
    OP_SUB   shift, and go to state 62
    OP_NEG   shift, and go to state 63
    INTEGER  shift, and go to state 64
    FLOAT    shift, and go to state 65

    $default  reduce using rule 48 (actual_parameter_expression)

    variable                     go to state 66
    procedure_statement          go to state 67
    actual_parameter_expression  go to state 83
    expression_list              go to state 84
    expression                   go to state 85
    simple_expression            go to state 69
    term                         go to state 70
    factor                       go to state 71
    sign                         go to state 72


State 60

   35 variable: ID DL_LBRACK . expression DL_RBRACK

    ID       shift, and go to state 37
    OP_ADD   shift, and go to state 61
    OP_SUB   shift, and go to state 62
    OP_NEG   shift, and go to state 63
    INTEGER  shift, and go to state 64
    FLOAT    shift, and go to state 65

    variable             go to state 66
    procedure_statement  go to state 67
    expression           go to state 86
    simple_expression    go to state 69
    term                 go to state 70
    factor               go to state 71
    sign                 go to state 72


State 61

   64 sign: OP_ADD .

    $default  reduce using rule 64 (sign)


State 62

   65 sign: OP_SUB .

    $default  reduce using rule 65 (sign)


State 63

   62 factor: OP_NEG . factor

    ID       shift, and go to state 37
    OP_ADD   shift, and go to state 61
    OP_SUB   shift, and go to state 62
    OP_NEG   shift, and go to state 63
    INTEGER  shift, and go to state 64
    FLOAT    shift, and go to state 65

    variable             go to state 66
    procedure_statement  go to state 67
    factor               go to state 87
    sign                 go to state 72


State 64

   58 factor: INTEGER .

    $default  reduce using rule 58 (factor)


State 65

   59 factor: FLOAT .

    $default  reduce using rule 59 (factor)


State 66

   60 factor: variable .

    $default  reduce using rule 60 (factor)


State 67

   61 factor: procedure_statement .

    $default  reduce using rule 61 (factor)


State 68

   39 if_statement: KW_IF expression . DL_COLON statement elif_statement
   40             | KW_IF expression . DL_COLON statement elif_statement KW_ELSE DL_COLON statement

    DL_COLON  shift, and go to state 88


State 69

   52 expression: simple_expression .
   53           | simple_expression . relop simple_expression

    KW_IN     shift, and go to state 89
    OP_LT     shift, and go to state 90
    OP_LE     shift, and go to state 91
    OP_GT     shift, and go to state 92
    OP_GE     shift, and go to state 93
    OP_EQUAL  shift, and go to state 94
    OP_NOTEQ  shift, and go to state 95

    $default  reduce using rule 52 (expression)

    relop  go to state 96


State 70

   54 simple_expression: term .
   55                  | term . addop simple_expression

    OP_ADD  shift, and go to state 97
    OP_SUB  shift, and go to state 98

    $default  reduce using rule 54 (simple_expression)

    addop  go to state 99


State 71

   56 term: factor .
   57     | factor . multop term

    OP_MUL  shift, and go to state 100
    OP_DIV  shift, and go to state 101

    $default  reduce using rule 56 (term)

    multop  go to state 102


State 72

   63 factor: sign . factor

    ID       shift, and go to state 37
    OP_ADD   shift, and go to state 61
    OP_SUB   shift, and go to state 62
    OP_NEG   shift, and go to state 63
    INTEGER  shift, and go to state 64
    FLOAT    shift, and go to state 65

    variable             go to state 66
    procedure_statement  go to state 67
    factor               go to state 103
    sign                 go to state 72


State 73

   45 for_statement: KW_FOR for_expression . KW_IN for_expression DL_COLON statement KW_ELSE DL_COLON statement
   46              | KW_FOR for_expression . KW_IN for_expression DL_COLON statement

    KW_IN  shift, and go to state 104


State 74

   47 for_expression: simple_expression .

    $default  reduce using rule 47 (for_expression)


State 75

   43 while_statement: KW_WHILE expression . DL_COLON statement
   44                | KW_WHILE expression . DL_COLON statement KW_ELSE DL_COLON statement

    DL_COLON  shift, and go to state 105


State 76

   32 statement: KW_RETURN expression .

    $default  reduce using rule 32 (statement)


State 77

   37 print_statement: KW_PRINT DL_LPAREN . expression DL_RPAREN

    ID       shift, and go to state 37
    OP_ADD   shift, and go to state 61
    OP_SUB   shift, and go to state 62
    OP_NEG   shift, and go to state 63
    INTEGER  shift, and go to state 64
    FLOAT    shift, and go to state 65

    variable             go to state 66
    procedure_statement  go to state 67
    expression           go to state 106
    simple_expression    go to state 69
    term                 go to state 70
    factor               go to state 71
    sign                 go to state 72


State 78

    8 compound_statement: KW_BEGIN statement_list KW_END .

    $default  reduce using rule 8 (compound_statement)


State 79

   24 statement_list: statement DL_SMCOLON . statement_list

    ID         shift, and go to state 37
    KW_BEGIN   shift, and go to state 27
    KW_IF      shift, and go to state 38
    KW_NOP     shift, and go to state 39
    KW_FOR     shift, and go to state 40
    KW_WHILE   shift, and go to state 41
    KW_RETURN  shift, and go to state 42
    KW_PRINT   shift, and go to state 43

    compound_statement   go to state 44
    statement_list       go to state 107
    statement            go to state 46
    variable             go to state 47
    print_statement      go to state 48
    procedure_statement  go to state 49
    if_statement         go to state 50
    while_statement      go to state 51
    for_statement        go to state 52


State 80

   25 statement: variable DL_ASSIGN . expression

    ID       shift, and go to state 37
    OP_ADD   shift, and go to state 61
    OP_SUB   shift, and go to state 62
    OP_NEG   shift, and go to state 63
    INTEGER  shift, and go to state 64
    FLOAT    shift, and go to state 65

    variable             go to state 66
    procedure_statement  go to state 67
    expression           go to state 108
    simple_expression    go to state 69
    term                 go to state 70
    factor               go to state 71
    sign                 go to state 72


State 81

   21 parameter_list: identifier_list DL_COLON type .
   22               | identifier_list DL_COLON type . DL_SMCOLON parameter_list

    DL_SMCOLON  shift, and go to state 109

    $default  reduce using rule 21 (parameter_list)


State 82

   17 subprogram_head: KW_FUNC ID arguments DL_COLON standard_type DL_SMCOLON .

    $default  reduce using rule 17 (subprogram_head)


State 83

   38 procedure_statement: ID DL_LPAREN actual_parameter_expression . DL_RPAREN

    DL_RPAREN  shift, and go to state 110


State 84

   49 actual_parameter_expression: expression_list .

    $default  reduce using rule 49 (actual_parameter_expression)


State 85

   50 expression_list: expression .
   51                | expression . DL_COMMA expression_list

    DL_COMMA  shift, and go to state 111

    $default  reduce using rule 50 (expression_list)


State 86

   35 variable: ID DL_LBRACK expression . DL_RBRACK

    DL_RBRACK  shift, and go to state 112


State 87

   62 factor: OP_NEG factor .

    $default  reduce using rule 62 (factor)


State 88

   39 if_statement: KW_IF expression DL_COLON . statement elif_statement
   40             | KW_IF expression DL_COLON . statement elif_statement KW_ELSE DL_COLON statement

    ID         shift, and go to state 37
    KW_BEGIN   shift, and go to state 27
    KW_IF      shift, and go to state 38
    KW_NOP     shift, and go to state 39
    KW_FOR     shift, and go to state 40
    KW_WHILE   shift, and go to state 41
    KW_RETURN  shift, and go to state 42
    KW_PRINT   shift, and go to state 43

    compound_statement   go to state 44
    statement            go to state 113
    variable             go to state 47
    print_statement      go to state 48
    procedure_statement  go to state 49
    if_statement         go to state 50
    while_statement      go to state 51
    for_statement        go to state 52


State 89

   72 relop: KW_IN .

    $default  reduce using rule 72 (relop)


State 90

   68 relop: OP_LT .

    $default  reduce using rule 68 (relop)


State 91

   69 relop: OP_LE .

    $default  reduce using rule 69 (relop)


State 92

   66 relop: OP_GT .

    $default  reduce using rule 66 (relop)


State 93

   67 relop: OP_GE .

    $default  reduce using rule 67 (relop)


State 94

   70 relop: OP_EQUAL .

    $default  reduce using rule 70 (relop)


State 95

   71 relop: OP_NOTEQ .

    $default  reduce using rule 71 (relop)


State 96

   53 expression: simple_expression relop . simple_expression

    ID       shift, and go to state 37
    OP_ADD   shift, and go to state 61
    OP_SUB   shift, and go to state 62
    OP_NEG   shift, and go to state 63
    INTEGER  shift, and go to state 64
    FLOAT    shift, and go to state 65

    variable             go to state 66
    procedure_statement  go to state 67
    simple_expression    go to state 114
    term                 go to state 70
    factor               go to state 71
    sign                 go to state 72


State 97

   73 addop: OP_ADD .

    $default  reduce using rule 73 (addop)


State 98

   74 addop: OP_SUB .

    $default  reduce using rule 74 (addop)


State 99

   55 simple_expression: term addop . simple_expression

    ID       shift, and go to state 37
    OP_ADD   shift, and go to state 61
    OP_SUB   shift, and go to state 62
    OP_NEG   shift, and go to state 63
    INTEGER  shift, and go to state 64
    FLOAT    shift, and go to state 65

    variable             go to state 66
    procedure_statement  go to state 67
    simple_expression    go to state 115
    term                 go to state 70
    factor               go to state 71
    sign                 go to state 72


State 100

   75 multop: OP_MUL .

    $default  reduce using rule 75 (multop)


State 101

   76 multop: OP_DIV .

    $default  reduce using rule 76 (multop)


State 102

   57 term: factor multop . term

    ID       shift, and go to state 37
    OP_ADD   shift, and go to state 61
    OP_SUB   shift, and go to state 62
    OP_NEG   shift, and go to state 63
    INTEGER  shift, and go to state 64
    FLOAT    shift, and go to state 65

    variable             go to state 66
    procedure_statement  go to state 67
    term                 go to state 116
    factor               go to state 71
    sign                 go to state 72


State 103

   63 factor: sign factor .

    $default  reduce using rule 63 (factor)


State 104

   45 for_statement: KW_FOR for_expression KW_IN . for_expression DL_COLON statement KW_ELSE DL_COLON statement
   46              | KW_FOR for_expression KW_IN . for_expression DL_COLON statement

    ID       shift, and go to state 37
    OP_ADD   shift, and go to state 61
    OP_SUB   shift, and go to state 62
    OP_NEG   shift, and go to state 63
    INTEGER  shift, and go to state 64
    FLOAT    shift, and go to state 65

    variable             go to state 66
    procedure_statement  go to state 67
    for_expression       go to state 117
    simple_expression    go to state 74
    term                 go to state 70
    factor               go to state 71
    sign                 go to state 72


State 105

   43 while_statement: KW_WHILE expression DL_COLON . statement
   44                | KW_WHILE expression DL_COLON . statement KW_ELSE DL_COLON statement

    ID         shift, and go to state 37
    KW_BEGIN   shift, and go to state 27
    KW_IF      shift, and go to state 38
    KW_NOP     shift, and go to state 39
    KW_FOR     shift, and go to state 40
    KW_WHILE   shift, and go to state 41
    KW_RETURN  shift, and go to state 42
    KW_PRINT   shift, and go to state 43

    compound_statement   go to state 44
    statement            go to state 118
    variable             go to state 47
    print_statement      go to state 48
    procedure_statement  go to state 49
    if_statement         go to state 50
    while_statement      go to state 51
    for_statement        go to state 52


State 106

   37 print_statement: KW_PRINT DL_LPAREN expression . DL_RPAREN

    DL_RPAREN  shift, and go to state 119


State 107

   24 statement_list: statement DL_SMCOLON statement_list .

    $default  reduce using rule 24 (statement_list)


State 108

   25 statement: variable DL_ASSIGN expression .

    $default  reduce using rule 25 (statement)


State 109

   22 parameter_list: identifier_list DL_COLON type DL_SMCOLON . parameter_list

    ID  shift, and go to state 19

    identifier_list  go to state 33
    parameter_list   go to state 120


State 110

   38 procedure_statement: ID DL_LPAREN actual_parameter_expression DL_RPAREN .

    $default  reduce using rule 38 (procedure_statement)


State 111

   51 expression_list: expression DL_COMMA . expression_list

    ID       shift, and go to state 37
    OP_ADD   shift, and go to state 61
    OP_SUB   shift, and go to state 62
    OP_NEG   shift, and go to state 63
    INTEGER  shift, and go to state 64
    FLOAT    shift, and go to state 65

    variable             go to state 66
    procedure_statement  go to state 67
    expression_list      go to state 121
    expression           go to state 85
    simple_expression    go to state 69
    term                 go to state 70
    factor               go to state 71
    sign                 go to state 72


State 112

   35 variable: ID DL_LBRACK expression DL_RBRACK .

    $default  reduce using rule 35 (variable)


State 113

   39 if_statement: KW_IF expression DL_COLON statement . elif_statement
   40             | KW_IF expression DL_COLON statement . elif_statement KW_ELSE DL_COLON statement

    $default  reduce using rule 41 (elif_statement)

    elif_statement  go to state 122


State 114

   53 expression: simple_expression relop simple_expression .

    $default  reduce using rule 53 (expression)


State 115

   55 simple_expression: term addop simple_expression .

    $default  reduce using rule 55 (simple_expression)


State 116

   57 term: factor multop term .

    $default  reduce using rule 57 (term)


State 117

   45 for_statement: KW_FOR for_expression KW_IN for_expression . DL_COLON statement KW_ELSE DL_COLON statement
   46              | KW_FOR for_expression KW_IN for_expression . DL_COLON statement

    DL_COLON  shift, and go to state 123


State 118

   43 while_statement: KW_WHILE expression DL_COLON statement .
   44                | KW_WHILE expression DL_COLON statement . KW_ELSE DL_COLON statement

    KW_ELSE  shift, and go to state 124

    $default  reduce using rule 43 (while_statement)


State 119

   37 print_statement: KW_PRINT DL_LPAREN expression DL_RPAREN .

    $default  reduce using rule 37 (print_statement)


State 120

   22 parameter_list: identifier_list DL_COLON type DL_SMCOLON parameter_list .

    $default  reduce using rule 22 (parameter_list)


State 121

   51 expression_list: expression DL_COMMA expression_list .

    $default  reduce using rule 51 (expression_list)


State 122

   39 if_statement: KW_IF expression DL_COLON statement elif_statement .
   40             | KW_IF expression DL_COLON statement elif_statement . KW_ELSE DL_COLON statement
   42 elif_statement: elif_statement . KW_ELIF expression DL_COLON statement

    KW_ELSE  shift, and go to state 125
    KW_ELIF  shift, and go to state 126

    $default  reduce using rule 39 (if_statement)


State 123

   45 for_statement: KW_FOR for_expression KW_IN for_expression DL_COLON . statement KW_ELSE DL_COLON statement
   46              | KW_FOR for_expression KW_IN for_expression DL_COLON . statement

    ID         shift, and go to state 37
    KW_BEGIN   shift, and go to state 27
    KW_IF      shift, and go to state 38
    KW_NOP     shift, and go to state 39
    KW_FOR     shift, and go to state 40
    KW_WHILE   shift, and go to state 41
    KW_RETURN  shift, and go to state 42
    KW_PRINT   shift, and go to state 43

    compound_statement   go to state 44
    statement            go to state 127
    variable             go to state 47
    print_statement      go to state 48
    procedure_statement  go to state 49
    if_statement         go to state 50
    while_statement      go to state 51
    for_statement        go to state 52


State 124

   44 while_statement: KW_WHILE expression DL_COLON statement KW_ELSE . DL_COLON statement

    DL_COLON  shift, and go to state 128


State 125

   40 if_statement: KW_IF expression DL_COLON statement elif_statement KW_ELSE . DL_COLON statement

    DL_COLON  shift, and go to state 129


State 126

   42 elif_statement: elif_statement KW_ELIF . expression DL_COLON statement

    ID       shift, and go to state 37
    OP_ADD   shift, and go to state 61
    OP_SUB   shift, and go to state 62
    OP_NEG   shift, and go to state 63
    INTEGER  shift, and go to state 64
    FLOAT    shift, and go to state 65

    variable             go to state 66
    procedure_statement  go to state 67
    expression           go to state 130
    simple_expression    go to state 69
    term                 go to state 70
    factor               go to state 71
    sign                 go to state 72


State 127

   45 for_statement: KW_FOR for_expression KW_IN for_expression DL_COLON statement . KW_ELSE DL_COLON statement
   46              | KW_FOR for_expression KW_IN for_expression DL_COLON statement .

    KW_ELSE  shift, and go to state 131

    $default  reduce using rule 46 (for_statement)


State 128

   44 while_statement: KW_WHILE expression DL_COLON statement KW_ELSE DL_COLON . statement

    ID         shift, and go to state 37
    KW_BEGIN   shift, and go to state 27
    KW_IF      shift, and go to state 38
    KW_NOP     shift, and go to state 39
    KW_FOR     shift, and go to state 40
    KW_WHILE   shift, and go to state 41
    KW_RETURN  shift, and go to state 42
    KW_PRINT   shift, and go to state 43

    compound_statement   go to state 44
    statement            go to state 132
    variable             go to state 47
    print_statement      go to state 48
    procedure_statement  go to state 49
    if_statement         go to state 50
    while_statement      go to state 51
    for_statement        go to state 52


State 129

   40 if_statement: KW_IF expression DL_COLON statement elif_statement KW_ELSE DL_COLON . statement

    ID         shift, and go to state 37
    KW_BEGIN   shift, and go to state 27
    KW_IF      shift, and go to state 38
    KW_NOP     shift, and go to state 39
    KW_FOR     shift, and go to state 40
    KW_WHILE   shift, and go to state 41
    KW_RETURN  shift, and go to state 42
    KW_PRINT   shift, and go to state 43

    compound_statement   go to state 44
    statement            go to state 133
    variable             go to state 47
    print_statement      go to state 48
    procedure_statement  go to state 49
    if_statement         go to state 50
    while_statement      go to state 51
    for_statement        go to state 52


State 130

   42 elif_statement: elif_statement KW_ELIF expression . DL_COLON statement

    DL_COLON  shift, and go to state 134


State 131

   45 for_statement: KW_FOR for_expression KW_IN for_expression DL_COLON statement KW_ELSE . DL_COLON statement

    DL_COLON  shift, and go to state 135


State 132

   44 while_statement: KW_WHILE expression DL_COLON statement KW_ELSE DL_COLON statement .

    $default  reduce using rule 44 (while_statement)


State 133

   40 if_statement: KW_IF expression DL_COLON statement elif_statement KW_ELSE DL_COLON statement .

    $default  reduce using rule 40 (if_statement)


State 134

   42 elif_statement: elif_statement KW_ELIF expression DL_COLON . statement

    ID         shift, and go to state 37
    KW_BEGIN   shift, and go to state 27
    KW_IF      shift, and go to state 38
    KW_NOP     shift, and go to state 39
    KW_FOR     shift, and go to state 40
    KW_WHILE   shift, and go to state 41
    KW_RETURN  shift, and go to state 42
    KW_PRINT   shift, and go to state 43

    compound_statement   go to state 44
    statement            go to state 136
    variable             go to state 47
    print_statement      go to state 48
    procedure_statement  go to state 49
    if_statement         go to state 50
    while_statement      go to state 51
    for_statement        go to state 52


State 135

   45 for_statement: KW_FOR for_expression KW_IN for_expression DL_COLON statement KW_ELSE DL_COLON . statement

    ID         shift, and go to state 37
    KW_BEGIN   shift, and go to state 27
    KW_IF      shift, and go to state 38
    KW_NOP     shift, and go to state 39
    KW_FOR     shift, and go to state 40
    KW_WHILE   shift, and go to state 41
    KW_RETURN  shift, and go to state 42
    KW_PRINT   shift, and go to state 43

    compound_statement   go to state 44
    statement            go to state 137
    variable             go to state 47
    print_statement      go to state 48
    procedure_statement  go to state 49
    if_statement         go to state 50
    while_statement      go to state 51
    for_statement        go to state 52


State 136

   42 elif_statement: elif_statement KW_ELIF expression DL_COLON statement .

    $default  reduce using rule 42 (elif_statement)


State 137

   45 for_statement: KW_FOR for_expression KW_IN for_expression DL_COLON statement KW_ELSE DL_COLON statement .

    $default  reduce using rule 45 (for_statement)
